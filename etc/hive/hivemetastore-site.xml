<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
  <property>
    <name>metastore.thrift.uris</name>
    <value>thrift://master:9083</value>
    <description>Thrift URI for the remote metastore. Used by metastore client to connect to remote metastore.</description>
  </property>

  <property>
    <name>hive.metastore.port</name>
    <value>9083</value>
    <description>Port Thrift will listen on.</description>
  </property>

  <property>
    <name>hive.metastore.warehouse.dir</name>
    <value>hdfs://master:9000/home/hive/warehouse</value>
    <description>URI of the default location for tables in the default catalog and database.</description>
  </property>

  <property>
    <name>datanucleus.schema.autoCreateAll</name>
    <value>true</value>
    <description>Creates necessary schema on a startup if one does not exist. Set this to false, after creating it once.

    datanucleus.schema.autoCreateAll is disabled if hive.metastore.schema.verification is true. Default: true</description>
  </property>

  <property>
    <name>datanucleus.schema.autoCreateTables</name>
    <value>true</value>
  </property>

  <property>
    <name>datanucleus.fixedDatastore</name>
    <value>true</value>
  </property>

  <property>
    <name>datanucleus.autoStartMechanism</name> 
    <value>SchemaTable</value>
  </property> 

  <property>
    <name>hive.metastore.schema.verification</name>
    <value>false</value>
    <description>Enforce metastore schema version consistency.
    True: Verify that version information stored in metastore matches with one from Hive jars. Also disable automatic schema migration attempt (see datanucleus.autoCreateSchema and datanucleus.schema.autoCreateAll). Users are required to manually migrate schema after Hive upgrade which ensures proper metastore schema migration.
    False: Warn if the version information stored in metastore doesn't match with one from Hive jars.

    For more information, see Metastore Schema Consistency and Upgrades. Default: false</description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionURL</name>
    <value>jdbc:postgresql://master/metastore</value>
    <description>JDBC connect string for a JDBC metastore. Default: jdbc:derby:;databaseName=metastore_db;create=true</description>
  </property>
   
  <property>
    <name>javax.jdo.option.ConnectionDriverName</name>
    <value>org.postgresql.Driver</value>
    <description>Driver class name for a JDBC metastore. Default: org.apache.derby.jdbc.EmbeddedDriver</description>
  </property>
   
  <property>
    <name>javax.jdo.option.ConnectionUserName</name>
    <value>hive</value>
    <description>Username to use against metastore database. Default: APP</description>
  </property>
   
  <property>
    <name>javax.jdo.option.ConnectionPassword</name>
    <value>D@$#H0le99*</value>
    <description>Password to use against metastore database. Default: mine</description>
  </property>
   
  <property>
    <name>metastore.try.direct.sql.ddl</name>
    <value>false</value>
    <description>When using Postgres you should set the configuration parameter metastore.try.direct.sql.ddl (previously hive.metastore.try.direct.sql.ddl) to false, to avoid failures in certain operations.</description>
  </property>

  <property>
    <name>hive.metastore.rawstore.impl</name>
    <value>org.apache.hadoop.hive.metastore.cache.CachedStore</value>
    <description>As of Hive 3.0 there are two implementations. The default implementation (org.apache.hadoop.hive.metastore.ObjectStore) queries the database directly. HIVE-16520 introduced a new CachedStore (full class name is org.apache.hadoop.hive.metastore.cache.CachedStore) that caches retrieved objects in memory on the Metastore.</description>
  </property>

  <!-- Metrics -->
  <property>
    <name>hive.metastore.metrics.enabled</name>
    <value>true</value>
    <description>Enable metrics on the Hive Metastore Service. (For other metastore configuration properties, see the Metastore and Hive Metastore Security sections.) Default: false</description>
  </property>

  <!-- Compactor -->
  <property>
    <name>hive.compactor.initiator.on</name>
    <value>true</value>
    <description>Whether to run the initiator and cleaner threads on this metastore instance. Set this to true on one instance of the Thrift metastore service as part of turning on Hive transactions. For a complete list of parameters required for turning on transactions, see hive.txn.manager.

    It's critical that this is enabled on exactly one metastore service instance (not enforced yet). Default: false</description>
  </property>

  <property>
    <name>hive.compactor.worker.threads</name>
    <value>1</value>
    <description>How many compactor worker threads to run on this metastore instance. Set this to a positive number on one or more instances of the Thrift metastore service as part of turning on Hive transactions. For a complete list of parameters required for turning on transactions, see hive.txn.manager.

    Worker threads spawn MapReduce jobs to do compactions. They do not do the compactions themselves. Increasing the number of worker threads will decrease the time it takes tables or partitions to be compacted once they are determined to need compaction. It will also increase the background load on the Hadoop cluster as more MapReduce jobs will be running in the background. Default: 0</description>
  </property>

  <property>
    <name>hive.compactor.job.queue</name>
    <value>hive</value>
  </property>

</configuration>